// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// dcor_t_test_parallel
double dcor_t_test_parallel(arma::mat x, arma::mat y);
RcppExport SEXP _tdnn_dcor_t_test_parallel(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(dcor_t_test_parallel(x, y));
    return rcpp_result_gen;
END_RCPP
}
// feature_screening_parallel
Rcpp::NumericVector feature_screening_parallel(arma::mat x, arma::mat y, double alpha);
RcppExport SEXP _tdnn_feature_screening_parallel(SEXP xSEXP, SEXP ySEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(feature_screening_parallel(x, y, alpha));
    return rcpp_result_gen;
END_RCPP
}
// de_dnn_st
arma::vec de_dnn_st(arma::mat X, NumericVector Y, arma::mat X_test, NumericVector s_sizes, double c, Nullable<NumericVector> W0_);
RcppExport SEXP _tdnn_de_dnn_st(SEXP XSEXP, SEXP YSEXP, SEXP X_testSEXP, SEXP s_sizesSEXP, SEXP cSEXP, SEXP W0_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_test(X_testSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type s_sizes(s_sizesSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< Nullable<NumericVector> >::type W0_(W0_SEXP);
    rcpp_result_gen = Rcpp::wrap(de_dnn_st(X, Y, X_test, s_sizes, c, W0_));
    return rcpp_result_gen;
END_RCPP
}
// best_s
NumericVector best_s(arma::mat estimate_matrix);
RcppExport SEXP _tdnn_best_s(SEXP estimate_matrixSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type estimate_matrix(estimate_matrixSEXP);
    rcpp_result_gen = Rcpp::wrap(best_s(estimate_matrix));
    return rcpp_result_gen;
END_RCPP
}
// tuning_st
NumericVector tuning_st(NumericVector s_seq, arma::mat& X, NumericVector& Y, arma::mat& X_test, double c, NumericVector W0_);
RcppExport SEXP _tdnn_tuning_st(SEXP s_seqSEXP, SEXP XSEXP, SEXP YSEXP, SEXP X_testSEXP, SEXP cSEXP, SEXP W0_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type s_seq(s_seqSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type X_test(X_testSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type W0_(W0_SEXP);
    rcpp_result_gen = Rcpp::wrap(tuning_st(s_seq, X, Y, X_test, c, W0_));
    return rcpp_result_gen;
END_RCPP
}
// tuning_test
void tuning_test(NumericVector s_seq, arma::mat& X, NumericVector& Y, arma::mat& X_test, double bc_p, NumericVector W0_);
RcppExport SEXP _tdnn_tuning_test(SEXP s_seqSEXP, SEXP XSEXP, SEXP YSEXP, SEXP X_testSEXP, SEXP bc_pSEXP, SEXP W0_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type s_seq(s_seqSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type X_test(X_testSEXP);
    Rcpp::traits::input_parameter< double >::type bc_p(bc_pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type W0_(W0_SEXP);
    tuning_test(s_seq, X, Y, X_test, bc_p, W0_);
    return R_NilValue;
END_RCPP
}
// de_dnn
List de_dnn(arma::mat X, arma::vec Y, arma::mat X_test, NumericVector s_sizes, double c, Nullable<NumericVector> W0_);
RcppExport SEXP _tdnn_de_dnn(SEXP XSEXP, SEXP YSEXP, SEXP X_testSEXP, SEXP s_sizesSEXP, SEXP cSEXP, SEXP W0_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_test(X_testSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type s_sizes(s_sizesSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< Nullable<NumericVector> >::type W0_(W0_SEXP);
    rcpp_result_gen = Rcpp::wrap(de_dnn(X, Y, X_test, s_sizes, c, W0_));
    return rcpp_result_gen;
END_RCPP
}
// tuning
NumericVector tuning(NumericMatrix X, NumericVector Y, NumericMatrix X_test, double c, Nullable<NumericVector> W0_);
RcppExport SEXP _tdnn_tuning(SEXP XSEXP, SEXP YSEXP, SEXP X_testSEXP, SEXP cSEXP, SEXP W0_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Y(YSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X_test(X_testSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< Nullable<NumericVector> >::type W0_(W0_SEXP);
    rcpp_result_gen = Rcpp::wrap(tuning(X, Y, X_test, c, W0_));
    return rcpp_result_gen;
END_RCPP
}
// submat_rcpp
NumericMatrix submat_rcpp(NumericMatrix X, LogicalVector condition);
RcppExport SEXP _tdnn_submat_rcpp(SEXP XSEXP, SEXP conditionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type condition(conditionSEXP);
    rcpp_result_gen = Rcpp::wrap(submat_rcpp(X, condition));
    return rcpp_result_gen;
END_RCPP
}
// matrix_subset_idx_rcpp
Rcpp::NumericMatrix matrix_subset_idx_rcpp(Rcpp::NumericMatrix x, Rcpp::IntegerVector y);
RcppExport SEXP _tdnn_matrix_subset_idx_rcpp(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(matrix_subset_idx_rcpp(x, y));
    return rcpp_result_gen;
END_RCPP
}
// bootstrap_cpp
NumericMatrix bootstrap_cpp(NumericMatrix X, NumericMatrix X_test, NumericMatrix Y, IntegerVector W, NumericVector W0, NumericVector s_choice_0, NumericVector s_choice_1, double c, int B);
RcppExport SEXP _tdnn_bootstrap_cpp(SEXP XSEXP, SEXP X_testSEXP, SEXP YSEXP, SEXP WSEXP, SEXP W0SEXP, SEXP s_choice_0SEXP, SEXP s_choice_1SEXP, SEXP cSEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X_test(X_testSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Y(YSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type W(WSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type W0(W0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type s_choice_0(s_choice_0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type s_choice_1(s_choice_1SEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(bootstrap_cpp(X, X_test, Y, W, W0, s_choice_0, s_choice_1, c, B));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_tdnn_dcor_t_test_parallel", (DL_FUNC) &_tdnn_dcor_t_test_parallel, 2},
    {"_tdnn_feature_screening_parallel", (DL_FUNC) &_tdnn_feature_screening_parallel, 3},
    {"_tdnn_de_dnn_st", (DL_FUNC) &_tdnn_de_dnn_st, 6},
    {"_tdnn_best_s", (DL_FUNC) &_tdnn_best_s, 1},
    {"_tdnn_tuning_st", (DL_FUNC) &_tdnn_tuning_st, 6},
    {"_tdnn_tuning_test", (DL_FUNC) &_tdnn_tuning_test, 6},
    {"_tdnn_de_dnn", (DL_FUNC) &_tdnn_de_dnn, 6},
    {"_tdnn_tuning", (DL_FUNC) &_tdnn_tuning, 5},
    {"_tdnn_submat_rcpp", (DL_FUNC) &_tdnn_submat_rcpp, 2},
    {"_tdnn_matrix_subset_idx_rcpp", (DL_FUNC) &_tdnn_matrix_subset_idx_rcpp, 2},
    {"_tdnn_bootstrap_cpp", (DL_FUNC) &_tdnn_bootstrap_cpp, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_tdnn(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
